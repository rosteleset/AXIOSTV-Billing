#!/bin/sh
#ABillS %DATE% %TIME%
#
# When the ppp link comes up, this script is called with the following
# parameters
#       $1      the interface name used by pppd (e.g. ppp3)
#       $2      the tty device name
#       $3      the tty device speed
#       $4      the local IP address for the interface
#       $5      the remote IP address
#       $6      the parameter specified by the 'ipparam' option to pppd
#
# VERSION 7.1

START=$(date +%s)

AWK="/usr/bin/awk";
TC="/sbin/tc"
IPTABLES="/sbin/iptables"

debug=0;
NEW_MODEL=

IFNAME=$1;

if [ -f /var/run/radattr.${IFNAME} ]; then
   UPSPEED=`${AWK}  '/PPPD-Downstream-Speed-Limit/ {print $2}'  /var/run/radattr.${IFNAME}`
   DOWNSPEED=`${AWK}  '/PPPD-Upstream-Speed-Limit/ {print $2}'  /var/run/radattr.${IFNAME}`
   FILTERS=`${AWK}  '/Filter-Id/ {print $2}'  /var/run/radattr.${IFNAME}`
   USER_NAME=`${AWK}  '/User-Name/ {print $2}'  /var/run/radattr.${IFNAME}`

   if [ "${debug}" = "1" ]; then
     echo "Debug mode"
     echo $DOWNSPEED
     echo $UPSPEED
     echo $FILTERS
   fi;

   if [ x"${NEW_MODEL}" != x ]; then
     /usr/axbills/libexec/linkupdown pppd up ${IFNAME} ${USER_NAME} $4 LINUX_NEW_MODEL=1
     exit;
   fi;

    ${TC} qdisc del dev ${IFNAME} root    > /dev/null
    ${TC} qdisc del dev ${IFNAME} ingress > /dev/null

##### speed server->client
   if [ "$UPSPEED" != "0" ] ; then

     #Hight speeds values
     _r2q=300; # default 1
     _burst=64; # default 4

     ${TC} qdisc add dev ${IFNAME} root handle 1: htb default 20 r2q ${_r2q}
     ${TC} class add dev ${IFNAME} parent 1: classid 1:1 htb rate ${UPSPEED}kbit burst ${_burst}k
     ${TC} class add dev ${IFNAME} parent 1:1 classid 1:10 htb rate ${UPSPEED}kbit burst ${_burst}k prio 1
     ${TC} class add dev ${IFNAME} parent 1:1 classid 1:20 htb rate ${UPSPEED}kbit burst ${_burst}k prio 2
     ${TC} qdisc add dev ${IFNAME} parent 1:10 handle 10: sfq perturb 10 quantum 1500
     ${TC} qdisc add dev ${IFNAME} parent 1:20 handle 20: sfq perturb 10 quantum 1500
     ${TC} filter add dev ${IFNAME} parent 1:0 protocol ip prio 10 u32 match ip tos 0x10 0xff flowid 1:10
     ${TC} filter add dev ${IFNAME} parent 1:0 protocol ip prio 10 u32 match ip protocol 1 0xff flowid 1:10

#     ${TC} filter add dev $1 parent 1: protocol ip prio 10 u32 match ip protocol 6 0xff match u8 0x05 0x0f at 0 match u160x0000 0xffc0 at 2 match u8 0x10 0xff at 33 flowid 1:10
   fi ;

##### speed client->server
   if [ "$DOWNSPEED" != "0" ] ; then
     burst=`echo $DOWNSPEED/16 | bc`
     ${TC} qdisc add dev ${IFNAME} handle ffff: ingress
     ${TC} filter add dev ${IFNAME} parent ffff: protocol ip prio 50 u32 match ip src 0.0.0.0/0 police rate ${DOWNSPEED}kbit burst ${burst}k drop flowid :1
   fi;




#### Filters
   if [ w${FILTERS} != w ] ; then
     #Put there filters rule
     #echo "Filter: ${FILTERS}"

     REDIRECT_IP="172.16.250.1"
     ALLOW_NET="172.16.250.0/24"
     
     if [ -f /var/run/radattr.$IFNAME ]; then
       FILTERS=`${AWK}  '/Filter-Id/ {print $2}'  /var/run/radattr.${IFNAME}`
     fi;

     EXIST=`${IPTABLES} -t nat -L PREROUTING -v | grep "${IFNAME} ";  ${IPTABLES} -L -v | grep DROP | grep "${IFNAME} "` 
     
     if [ w != w"${EXIST}" ]; then
       ${IPTABLES} -t nat -D PREROUTING -i ${IFNAME} -p tcp -m tcp --dport 80 -j DNAT --to-destination ${REDIRECT_IP}:80
       ${IPTABLES} -D FORWARD -i ${IFNAME} -j DROP
     fi;


     if [ w${FILTERS} = wNEG_DEPOSIT ] ; then
       #### Filters
       $IPTABLES -t nat -A PREROUTING -i ${IFNAME} -p tcp -m tcp --dport 80 -j DNAT --to-destination $REDIRECT_IP:80
       $IPTABLES -t nat -A PREROUTING -i ${IFNAME} -d ${ALLOW_NET} -j RETURN
       $IPTABLES -I FORWARD -i ${IFNAME} -d ${ALLOW_NET} -j ACCEPT 
       $IPTABLES -A FORWARD -i ${IFNAME} -j DROP
       if [ w${DEBUG} != w ] ; then
          END=$(date +%s)
          DIFF=$(( $END - $START ))
          echo "UP neg filter User: ${USER_NAME} Filter: ${FILTERS} IF: ${IFNAME} Time: ${DIFF}" >> /tmp/neg
       fi;
     fi;



     #Max TCP Sessions filter
     FILTER_ID=`echo ${FILTERS} | awk -F: '{ print $1 }'`;
     if [ w${FILTER_ID} = wMAX_TCP ]; then
       COUNT=`echo ${FILTERS} | awk -F: '{ print $2 }'`;
     fi;
   fi;

 fi;

END=$(date +%s)
DIFF=$(( $END - $START ))
