#!perl
=head1 NAME

  Integration with external financial programs
  1C

=cut

use strict;
use warnings FATAL => 'all';
use AXbills::Defs;
use AXbills::Base qw(time2sec);
use Extfin;
use Users;

our (
  $db,
  $admin,
  %conf,
  %lang,
  @MONTHES,
  @WEEKDAYS,
  %ADMIN_REPORT,
  %permissions,
  %err_strs,
  @status
);

my $Extfin = Extfin->new($db, $admin, \%conf);
our AXbills::HTML $html;
our Conf $Conf;
#**********************************************************
=head2 extfin_export_customers()

=cut
#**********************************************************
sub extfin_export_customers {
  $Extfin->{ACTION} = 'get';
  $Extfin->{ACTION_LNG} = $lang{SHOW};

  my ($Y, $M, undef) = split(/-/, $DATE);
  $FORM{MONTH} = "$Y-$M" if (!$FORM{MONTH});
  my $type = $FORM{TYPE} || '';
  $pages_qs .= "&TYPE=$type";

  if ($type eq 'CUSTOMERS') {
    $LIST_PARAMS{PAGE_ROWS} = ($FORM{PAGE_ROWS}) ? $FORM{PAGE_ROWS} : 1000000;
    $LIST_PARAMS{PG} = $FORM{PG} || 0;
    $LIST_PARAMS{USER_TYPE} = $FORM{USER_TYPE};
    $pages_qs .= "&USER_TYPE=$FORM{USER_TYPE}";
    if ($LIST_PARAMS{USER_TYPE} == 0 && $FORM{TOTAL_ONLY}) {
      $pages_qs .= "&TOTAL_ONLY=$FORM{TOTAL_ONLY}";
      my $table = $html->table({
        width   => '100%',
        caption => $lang{USERS},
        title   =>
          [ 'ID', $lang{NAME}, $lang{FIO}, "$lang{GROUP} ID", "$lang{GROUP}", $lang{TYPE}, $lang{ADDRESS}, $lang{PHONE},
            $lang{CONTRACT_ID}, "$lang{CONTRACT} $lang{DATE}", 'BILL ID', "BANK ACCOUNT", 'BANK NAME', 'COR ACCT' ],
        ID      => 'EXTFIN_CUSTOMERS',
        qs      => $pages_qs,
        rows    =>
          [ [ 10000000, "$lang{TOTAL} $lang{USERS}", "$lang{TOTAL} $lang{USERS}", 0, '', 1, '', '', '', '', '', '', '' ] ],
        EXPORT  => 'XML:xml=1'
      });

      print $table->show();
      return 0;
    }

    my @TITLE = ('ID', $lang{NAME}, $lang{FIO}, "$lang{GROUP} ID", "$lang{GROUP}", $lang{TYPE}, $lang{ADDRESS},
      $lang{PHONE}, "$lang{CONTRACT} $lang{TYPE}", $lang{CONTRACT_ID}, "$lang{CONTRACT} $lang{DATE}", 'BILL ID',
      "BANK ACCOUNT", 'BANK NAME', 'COR ACCT', 'UID');

    if ($FORM{INFO_FIELDS} || $FORM{INFO_FIELDS_COMPANIES}) {
      push @TITLE, split(/, /, $FORM{INFO_FIELDS} . $FORM{INFO_FIELDS_COMPANIES});
      $pages_qs .= "&INFO_FIELDS=$FORM{INFO_FIELDS}&INFO_FIELDS_COMPANIES=$FORM{INFO_FIELDS_COMPANIES}";
    }

    my $list = $Extfin->customers_list({ %FORM, %LIST_PARAMS });
    my $table = $html->table({
      width   => '100%',
      caption => "$lang{USERS}",
      title   => \@TITLE,
      ID      => 'EXTFIN_CUSTOMERS',
      qs      => $pages_qs,
      EXPORT  => ' XML:&xml=1'
    });

    foreach my $line (@$list) {
      # Group, Kod, ������������, ��� �����������, ������ ������������, ����������� �����, �������� �����,
      # ����� ��������, ���, �������� �������, ������
      # ����� ��������, ���, �������� �������, �������� ����,
      #Info fields
      my @arr = ();
      if ($Extfin->{SEARCH_FIELDS_COUNT}) {
        for (my $i = 0; $i <= $Extfin->{SEARCH_FIELDS_COUNT}; $i++) {
          push @arr, $line->[ 15 + $i ];
        }
      }

      $table->addrow($line->[0],
        $line->[1],
        $line->[2],
        $line->[3],
        $line->[4],
        $line->[5],
        $line->[6],
        $line->[7],
        $line->[8],
        $line->[9],
        $line->[10],
        $line->[11],
        $line->[12],
        $line->[13],
        $line->[14],
        $line->[15],
        @arr);
    }

    print $table->show();
    return 0;
  }
  elsif ($type eq 'PAYMENT_DEED') {
    if ($FORM{PERIOD} && $FORM{PERIOD} =~ /(\d{2})\.(\d{2})\.(\d{4})\-(\d{2})\.(\d{2})\.(\d{4})/) {
      $LIST_PARAMS{FROM_DATE} = "$3-$2-$1";
      $LIST_PARAMS{TO_DATE} = "$6-$5-$4";
    }
    else {
      $LIST_PARAMS{MONTH} = $FORM{MONTH};
    }

    $LIST_PARAMS{INFO_FIELDS} = $FORM{INFO_FIELDS};
    $LIST_PARAMS{USER_TYPE} = $FORM{USER_TYPE};
    $LIST_PARAMS{TOTAL_ONLY} = $FORM{TOTAL_ONLY};

    $Extfin->payment_deed({ %FORM, %LIST_PARAMS });

    my @TITLE = ('ID', $lang{NAME}, $lang{TYPE}, "$lang{SUM}", "$lang{VAT}", "$lang{TOTAL}");
    if ($FORM{INFO_FIELDS} || $FORM{INFO_FIELDS_COMPANIES}) {
      push @TITLE, split(/, /, $FORM{INFO_FIELDS} . $FORM{INFO_FIELDS_COMPANIES});
      $pages_qs .= "&INFO_FIELDS=$FORM{INFO_FIELDS}&INFO_FIELDS_COMPANIES=$FORM{INFO_FIELDS_COMPANIES}";
    }

    my $period = '';
    if ($FORM{FROM_DATE}) {
      $period = "$FORM{FROM_DATE}/$FORM{TO_DATE}";
    }

    my $table = $html->table({
      width   => '100%',
      caption => "PAYMENT_DEED $lang{DATE}: $period",
      title   => \@TITLE,
      ID      => 'PAYMENT_DEED',
      qs      => $pages_qs,
      EXPORT  => 1
    });

    my $total_sum = 0;
    foreach my $id (keys %{ $Extfin->{PAYMENT_DEED} }) {
      my ($name, $type_, $vat, @info_arr) = split(/\|/, $Extfin->{NAMES}{$id});
      my $total = $Extfin->{PAYMENT_DEED}{$id} + $Extfin->{PAYMENT_DEED}{$id} * ($vat / 100);

      if (!$FORM{TOTAL_ONLY}) {
        $table->addrow($id, $name, $type_, $Extfin->{PAYMENT_DEED}{$id}, $vat, $total, @info_arr);
      }
      else {
        $total_sum += $total;
      }
    }

    if ($FORM{TOTAL_ONLY}) {
      my $name = ($FORM{USER_TYPE} == 1) ? "$lang{TOTAL} $lang{COMPANIES}" : "$lang{TOTAL} $lang{USERS}";
      $table->addrow(999999, $name, $FORM{USER_TYPE}, 0, 0, $total_sum);
    }

    print $table->show();
    return 0;
  }
  elsif ($FORM{get}) {
    print "Content-Type: text/plain\n\n";
    my $list = $Extfin->customers_list({ %FORM, %LIST_PARAMS });
    my $output = '';
    foreach my $line (@$list) {
      # Group, Kod, ������������, ��� �����������, ������ ������������, ����������� �����, �������� �����,
      # ����� ��������, ���, �������� �������, �������� ����,
      $output .= "$line->[0]|-|$line->[1]|$line->[2]|$line->[3]|$line->[4]|$line->[5]|$line->[6]|$line->[7]|" . "$line->[8]|$line->[9]|$line->[10]|\n";
    }

    print $output;

    return 0;
  }

  $Extfin->{GROUP_SEL} = sel_groups();

  $Extfin->{TYPE_SEL} = $html->form_select(
    'TYPE',
    {
      SELECTED => $FORM{TYPE},
      SEL_HASH => {
        CUSTOMERS    => $lang{USERS},
        PAYMENT_DEED => $lang{PAYMENT_DEED}
      },
      NO_ID    => 1
    }
  );

  $Extfin->{USER_TYPE_SEL} = $html->form_select(
    'USER_TYPE',
    {
      SELECTED => $FORM{USER_TYPE},
      SEL_HASH => {
        '' => $lang{ALL},
        0  => $lang{USERS},
        1  => $lang{COMPANIES}
      },
      NO_ID    => 1
    }
  );

  my @monthes = ();
  for (my $i = 1; $i < 13; $i++) {
    push @monthes, sprintf("%d-%02d", $Y, $i);
  }

  $Extfin->{DATE_SEL} = $html->form_select(
    'MONTH',
    {
      SELECTED  => $FORM{MONTH},
      SEL_ARRAY => \@monthes,
      NO_ID     => 1
    }
  );

  $Extfin->{FROM_DATE} = $html->date_fld2('FROM_DATE', { MONTHES => \@MONTHES, FORM_NAME => 'extfin' });
  $Extfin->{TO_DATE} = $html->date_fld2('TO_DATE', { MONTHES => \@MONTHES, FORM_NAME => 'extfin' });

  #Users Info fields
  my $if_list = $Conf->config_list({ PARAM => 'ifu*' });
  foreach my $line (@$if_list) {
    my $field_id = '';
    if ($line->[0] =~ /ifu(\S+)/) {
      $field_id = $1;
    }

    #my ($position, $type
    my (undef, undef, $name) = split(/:/, $line->[1]);

    #my $input = '';
    my $info_fields = $html->form_input(
      'INFO_FIELDS',
      $field_id,
      {
        TYPE  => 'checkbox',
        STATE => ($FORM{$field_id}) ? 1 : undef
      }
    );

    my $div_form_check = $html->element('div', $info_fields . _translate($name), { class => 'form-check' });

    $Extfin->{INFO_FIELDS} .= $div_form_check;
  }

  #Companies Info list
  my $list = $Conf->config_list({ PARAM => 'ifc*', SORT => 2 });
  foreach my $line (@$list) {
    my $field_id = '';

    if ($line->[0] =~ /ifc(\S+)/) {
      $field_id = $1;
    }

    #my ($position, $type
    my (undef, undef, $name) = split(/:/, $line->[1]);
    my $info_fields_companies = $html->form_input(
      'INFO_FIELDS_COMPANIES',
      $field_id,
      {
        TYPE  => 'checkbox',
        STATE => ($FORM{$field_id}) ? 1 : undef
      }
    );

    my $div_form_check = $html->element('div', $info_fields_companies . _translate($name), { class => 'form-check' });
    $Extfin->{INFO_FIELDS_COMPANIES} .= $div_form_check;
  }

  $html->tpl_show(_include('extfin_export_customers', 'Extfin'), $Extfin);

  return 1;
}

#**********************************************************
=head2 extfin_periodic_paids($attr)


=cut
#**********************************************************
sub extfin_periodic_paids {
  my ($attr) = @_;

  require Payments;
  my $Payments = Payments->new($db, $admin, \%conf);
  my $Users = Users->new($db, $admin, \%conf);

  my $debug = $attr->{DEBUG} || 0;
  my $debug_output = '';

  $ADMIN_REPORT{DATE} = $DATE if (!$ADMIN_REPORT{DATE});

  my (undef, undef, $D) = split(/-/, $ADMIN_REPORT{DATE}, 3);

  if ($attr->{LOGIN}) {
    $Users->info(undef, {LOGIN => $attr->{LOGIN}});
    if ($Users->{UID}) {
      $attr->{UID} = $Users->{UID};
    }
    else {
      $debug_output .= "\nUSER NOT FOUND!\n\n" if ($debug > 2);
      $DEBUG .= $debug_output;
      return $debug_output;
    }
  }
  $debug_output .= "Extfin periodic paids\n" if ($debug > 1);

  my $list = $Extfin->paid_periodic_list({
    UID       => $attr->{UID},
    SUM       => '>0',
    EXPIRE    => '_SHOW',
    ACTIVATE  => '_SHOW',
    DISABLE   => 0,
    COLS_NAME => 1
  });

  foreach my $line (@$list) {
    $Users->info($line->{uid});
    if (defined($Users->{DISABLE}) and $Users->{DISABLE}) {
      $debug_output .= "!USER DISABLED! UID: $line->{uid} LOGIN: $Users->{LOGIN}\n" if ($debug > 2);
      next;
    }
    my $diff_active = date_diff($ADMIN_REPORT{DATE}, $line->{activate});
    my $make_payment = 0;
    my $sum = $line->{sum};
    if ((date_diff($ADMIN_REPORT{DATE}, $line->{expire}) <= 0) && ($line->{expire} ne '0000-00-00')) {
      $debug_output .= "EXPIRE: UID: $line->{uid} SUM: $line->{sum} TYPE: $line->{name} ($line->{id}])\n" if ($debug > 2);
      $Extfin->paid_periodic_del({ UID => $line->{uid}, ID => $line->{pt_id} });
    }
    elsif($diff_active > 0) {
      $debug_output .= "NOT ACTIVATED: UID: $line->{uid} SUM: $line->{sum} TYPE: $line->{name} ($line->{id}])\n" if ($debug > 2);
    }
    elsif(($diff_active < 0 && $D == 1) || $diff_active == 0) { #MAYBE ($D == 1) => ($D == $conf{START_PERIOD_DAY})
      if ($diff_active == 0) {
        $Extfin->paid_type_info({ ID => $line->{id} });
        if ($Extfin->{MONTH_ALIGNMENT} == 1) {
          $sum = ($sum / days_in_month({ DATE => $DATE })) * (days_in_month({ DATE => $DATE }) - $D + 1);
          $debug_output .= "ACTIVATED ALIGNMENT: UID: $line->{uid} SUM: $line->{sum} TYPE: $line->{name} ($line->{id}])\n" if ($debug > 2);
          $line->{comments} = "$lang{MONTH_ALIGNMENT}: $line->{comments}";
          $make_payment = 1;
        }
        else {
          $debug_output .= "ACTIVATED: UID: $line->{uid} SUM: $line->{sum} TYPE: $line->{name} ($line->{id}])\n" if ($debug > 2);
          $line->{comments} = "$lang{ACTIVATE}: $line->{comments}";
          $make_payment = 1;
        }
      }
      else {
        $debug_output .= "ACCRUAL: UID: $line->{uid} SUM: $line->{sum} TYPE: $line->{name} ($line->{id}])\n" if ($debug > 2);
        $line->{comments} = "$lang{ACCRUALS}: $line->{comments}";
        $make_payment = 1;
      }

    }
    elsif ($diff_active < 0) {
      $debug_output .= "IN ACTIVE: UID: $line->{uid} SUM: $line->{sum} TYPE: $line->{name} ($line->{id}])\n" if ($debug > 2);
    }

    if ($make_payment) {
      $Extfin->paid_add({
        TYPE        => $line->{id},
        SUM         => $sum,
        DESCRIB     => $line->{comments} ne '' ? $line->{comments} : "$lang{PERIOD}: $line->{sum}",
        MACCOUNT_ID => $line->{maccount_id},
        UID         => $line->{uid},
        DATE        => $ADMIN_REPORT{DATE},
        EXT_ID      => ''
      });

      if ($Extfin->{errno}) {
        print "Error: $Extfin->{errno}\n";
      }
      $Users->info($line->{uid});
      $Payments->add(
        {
          UID     => $line->{uid},
          BILL_ID => $Users->{BILL_ID},
        },
        {
          METHOD   => $line->{m_account_id},
          SUM      => $line->{sum},
          DESCRIBE => $line->{comments} ne '' ? $line->{comments} : "$lang{PERIOD}: $line->{sum}",
        }
      );
    }
  }

  $DEBUG .= $debug_output;
  return $debug_output;
}

#**********************************************************
=head2 extfin_paids()

=cut
#**********************************************************
sub extfin_paids {
  my ( $attr ) = @_;
  $Extfin->{ACTION} = 'add';
  $Extfin->{ACTION_LNG} = $lang{ADD};
  #my $PAYMENT_METHODS = get_payment_methods();

  if ($FORM{PERIODIC}) {
    if (defined($FORM{IDS})) {
      my @stock_ids = ();
      my @form_ids = split(/, /, $FORM{IDS});

      $ADMIN_REPORT{DATE} = $DATE if (!$ADMIN_REPORT{DATE});
      my $active_list = $Extfin->paid_periodic_list({
        ACTIVE    => 1,
        PERIODIC  => 1,
        UID       => $FORM{UID},
        COLS_NAME => 1
      });

      for my $periodics (@$active_list) {
        push @stock_ids, $periodics->{id};
      }
      @form_ids = grep { my $id = $_; not grep $_ eq $id, @stock_ids } @form_ids;

      require Payments;
      my $Payments = Payments->new($db, $admin, \%conf);
      foreach my $id (@form_ids) {

        if (! $FORM{'ACTIVATE_'. $id} || date_diff($FORM{'ACTIVATE_'. $id}, $ADMIN_REPORT{DATE}) < 0) {
          next;
        }

        my (undef, undef, $day) = split(/-/, $DATE, 3);
        $Extfin->paid_type_info({ ID => $id });
        my $sum = $FORM{'SUM_'. $id};
        my $action = "$lang{ACCRUALS}: ";
        if ($Extfin->{MONTH_ALIGNMENT} == 1) {
          $sum = ($sum / days_in_month({ DATE => $DATE })) * (days_in_month({ DATE => $DATE }) - $day + 1);
          $action = "$lang{MONTH_ALIGNMENT}: ";
        }

        $Payments->add(
          {
            UID     => $attr->{USER_INFO}->{UID},
            BILL_ID => $attr->{USER_INFO}->{BILL_ID},
          },
          {
            METHOD   => 4,
            SUM      => $sum,
            DESCRIBE => $action . $FORM{'COMMENTS_' . $id}
          }
        );
      }
    }
    $Extfin->paid_periodic_add({ %FORM });
    if (!$Extfin->{errno}) {
      $html->message('info', $lang{INFO}, $lang{CHANGED});
    }
  }
  elsif ($FORM{add}) {
    if (!$permissions{0}{1}) {
      $html->message('err', $lang{ERROR}, "Access Deny");
      return 0;
    }

    if ($FORM{SUM} eq '') {
      $Extfin->paid_type_info({ ID => $FORM{TYPE}});
      $FORM{SUM} = $Extfin->{TOTAL} > 0 ? $Extfin->{SUM} : 0;
    }
    $Extfin->paid_add({ %FORM });
    if (defined($FORM{PAIDS})) {
      require Payments;
      my $Payments = Payments->new($db, $admin, \%conf);
      $Payments->add(
        {
          UID => $attr->{USER_INFO}->{UID},
          BILL_ID => $attr->{USER_INFO}->{BILL_ID},
        },
        {
          METHOD        => 4,
          SUM           => $FORM{SUM},
          DESCRIBE      => $FORM{DESC},
          EXT_ID        => $FORM{EXT_ID},
        }
      )
    }
    if (!$Extfin->{errno}) {
      $html->message('info', $lang{INFO}, "$lang{ADDED}");
    }
  }
  elsif ($FORM{change}) {
    if (!$permissions{0}{4}) {
      $html->message('err', $lang{ERROR}, "Access Deny");
      return 0;
    }

    $Extfin->paid_change({
      %FORM,
      STATUS_DATE => ($FORM{STATUS} && $FORM{STATUS} > 0) ? $DATE : ''
    });

    if (!$Extfin->{errno}) {
      $html->message('info', $lang{INFO}, "$lang{CHANGED}");
    }
  }
  elsif ($FORM{chg}) {
    if (!$permissions{0}{4}) {
      $html->message('err', $lang{ERROR}, "Access Deny");
      return 0;
    }

    $Extfin->paid_info({ ID => $FORM{chg} });
    if (!$Extfin->{errno}) {
      $html->message('info', $lang{INFO}, "$lang{CHANGING}");
      $Extfin->{ACTION} = 'change';
      $Extfin->{ACTION_LNG} = $lang{CHANGE};
    }
  }
  elsif ($FORM{del}) {
    $Extfin->paid_del({ ID => $FORM{del} });
    if (!$Extfin->{errno}) {
      $html->message('info', $lang{INFO}, "$lang{CHANGED}");
    }
  }

  _error_show($Extfin);
  $Extfin->{STATUS} = ($Extfin->{STATUS}) ? ' checked' : '';

  $Extfin->{TYPE_SEL} = $html->form_select('TYPE', {
      SELECTED    => $Extfin->{TYPE} || '',
      SEL_LIST    => $Extfin->paid_types_list({ COLS_NAME => 1 }),
      SEL_OPTIONS => { 0 => '--' },
  });

  $Extfin->{MACCOUNT_SEL} = $html->form_select(
    'MACCOUNT_ID',
    {
      SELECTED => $FORM{METHOD} || '',
      SEL_HASH => get_payment_methods(),
    }
  );

  $Extfin->{DATE_LIST} = $html->date_fld2('DATE', { MONTHES => \@MONTHES, DATE => $Extfin->{DATE} || $DATE });

  my $table2 = '';

  if (!$LIST_PARAMS{UID}) {
    form_search({ SEARCH_FORM => $html->tpl_show(_include('extfin_search_paids', 'Extfin'), { %FORM }, { notprint => 1 }) });
  }
  else {
    my $list = $Extfin->paid_periodic_list({
      PERIODIC => 1,
      UID => $LIST_PARAMS{UID},
      COLS_NAME => 1
    });
    if ($Extfin->{TOTAL} > 0) {
      my $table = $html->table({
        width   => '80%',
        caption => $lang{PERIODIC_ACCRUALS},
        border  => 1,
        title   => [ '#', $lang{TYPE}, $lang{SUM}, $lang{DESCRIBE}, $lang{ACCOUNT}, $lang{ADMIN}, $lang{DATE}, $lang{ACTIVATE}, $lang{EXPIRE_DATE} ],
        ID      => 'EXTFIN_PERIOD'
      });

      foreach my $line (@$list) {
        # if (! $line->{id} ) {
        #   next;
        # }
        my $MACCOUNT = $html->form_select(
          'MACCOUNT_ID_' . $line->{id},
          {
            SELECTED => $line->{maccount_id} || 0,
            SEL_HASH => get_payment_methods(),
          }
        );

        $table->addrow(
          $html->form_input('IDS', $line->{id}, { TYPE  => 'checkbox', STATE => (defined($line->{expire})) ? 1 : 0 })
            . $html->b($line->{id}),
          $line->{name},
          $html->form_input("SUM_$line->{id}", $line->{sum} || '', { SIZE => '10' }),
          $html->form_input("COMMENTS_$line->{id}", ($line->{sum}) ? $line->{comments} : '', { SIZE => '50' }),
          $MACCOUNT,
          $line->{admin},
          $line->{date},
          $html->date_fld2("ACTIVATE_$line->{id}", { MONTHES => \@MONTHES, DATE => $line->{activate} || $DATE}),
          $html->date_fld2("EXPIRE_$line->{id}", { MONTHES => \@MONTHES, DATE => $line->{expire} || ' ' })
        );
      }

      $table2 = $html->form_main({
        CONTENT => $table->show({ OUTPUT2RETURN => 1 }),
        HIDDEN  => {
          index => "$index",
          UID   => $LIST_PARAMS{UID}
        },
        SUBMIT  => { PERIODIC => $lang{APPLY} },
      });
    }

    $pages_qs = "&UID=$LIST_PARAMS{UID}";
  }

  if (!defined($FORM{sort})) {
    $LIST_PARAMS{SORT} = 1;
    $LIST_PARAMS{DESC} = 'DESC';
  }

  $Extfin->paids_list({ %LIST_PARAMS });

  my ($table, undef) = result_former({
    INPUT_DATA      => $Extfin,
    FUNCTION        => 'paids_list',
    BASE_FIELDS     => 1,
    DEFAULT_FIELDS  => 'LOGIN,NAME,SUM,DATE',
    HIDDEN_FIELDS   => 'TOTAL',
    FUNCTION_FIELDS => 'del',
    EXT_TITLES      => {
      id          => "ID",
      date        => $lang{DATE},
      login       => $lang{USER},
      sum         => $lang{SUM},
      pt_name     => "$lang{NAME} $lang{ACCRUALS}",
      comments    => $lang{COMMENTS},
      admin       => $lang{ADMIN},
      method      => $lang{ACCOUNT},
      status      => $lang{STATUS},
      closed      => $lang{CLOSED},
      type        => "$lang{TYPE} ID",
      ext_id      => 'EXT ID'
    },
    SKIP_USER_TITLE => 1,
    TABLE           => {
      width   => '100%',
      caption => "$lang{LIST_ACCRUALS}",
      qs      => $pages_qs,
      ID      => 'EXTFIN_LIST_ACCRUALS',
      EXPORT  => 1,
    },
    MAKE_ROWS       => 1,
    MODULE          => 'Extfin'
  });

  my $table3_end = $html->table({
    width => '100%',
    rows  => [ [ "$lang{TOTAL}:", $html->b($Extfin->{TOTAL}), "$lang{SUM}: ", $html->b($Extfin->{TOTAL_SUM}) ] ]
  });
  my $table1 = '';
  if (defined($FORM{UID})) {
    $table1 = $html->tpl_show(_include('extfin_form_paid', 'Extfin'), $Extfin, { OUTPUT2RETURN => 1 });
  }
  my $table3 = $table->show() . $table3_end->show();

  return ('', $table1, $table3, $table2) if defined($attr->{PROFILE_MODE});

  return print ($table1, $table2, $table3);
}

#**********************************************************
=head2 extfin_paids_types()

=cut
#**********************************************************
sub extfin_paids_types {

  $Extfin->{ACTION} = 'add';
  $Extfin->{ACTION_LNG} = $lang{ADD};

  if ($FORM{add}) {
    if (!$permissions{0}{1}) {
      $html->message('err', $lang{ERROR}, "Access Deny");
      return 0;
    }

    $Extfin->paid_type_add({ %FORM });
    if (!$Extfin->{errno}) {
      $html->message('info', $lang{INFO}, "$lang{ADDED}");
    }
  }
  elsif ($FORM{change}) {
    if (!$permissions{0}{4}) {
      $html->message('err', $lang{ERROR}, "Access Deny");
      return 0;
    }

    $Extfin->paid_type_change({ %FORM });
    if (!$Extfin->{errno}) {
      $html->message('info', $lang{INFO}, "$lang{CHANGED}");
    }
  }
  elsif ($FORM{chg}) {
    if (!$permissions{0}{4}) {
      $html->message('err', $lang{ERROR}, "Access Deny");
      return 0;
    }

    $Extfin->paid_type_info({ ID => $FORM{chg} });
    if (!$Extfin->{errno}) {
      $html->message('info', $lang{INFO}, "$lang{CHANGING}");
      $Extfin->{ACTION} = 'change';
      $Extfin->{ACTION_LNG} = $lang{CHANGE};
    }
  }
  elsif ($FORM{del}) {
    $Extfin->paid_type_del({ ID => $FORM{del} });
    if (!$Extfin->{errno}) {
      $html->message('info', $lang{INFO}, "$lang{DELETED} ID $FORM{del}");
    }
  }

  if ($Extfin->{errno}) {
    $html->message('err', $lang{ERROR}, "[$Extfin->{errno}] $err_strs{$Extfin->{errno}}");
  }

  $Extfin->{PERIODIC} = ' checked' if ($Extfin->{PERIODIC});
  $Extfin->{MONTH_ALIGNMENT} = ' checked' if ($Extfin->{MONTH_ALIGNMENT});
  $html->tpl_show(_include('extfin_paid_type', 'Extfin'), $Extfin);

  my $list = $Extfin->paid_types_list({ %LIST_PARAMS });

  my $table = $html->table({
      width   => '100%',
      caption => "$lang{TARIF_PLAN}",
      border  => 1,
      title   => [ '#', $lang{NAME}, $lang{SUM}, $lang{PERIOD}, $lang{MONTH_ALIGNMENT}, '-', '-' ],
      ID      => 'ID'
  });

  my ($delete, $change);
  foreach my $line (@$list) {
    if ($permissions{4}{1}) {
      $delete = $html->button($lang{DEL}, "index=$index&del=$line->[0]",
        { MESSAGE => "$lang{DEL} $line->[0]?", BUTTON => 1 });
      $change = $html->button($lang{CHANGE}, "index=$index&chg=$line->[0]", { BUTTON => 1 });
    }

    my %bool = (
      0 => $lang{DISABLE},
      1 => $lang{ENABLE}
    );
    $table->addrow(
      $html->b($line->[0]),
      $html->button($line->[1], "index=$index&chg=$line->[0]"),
      $line->[2],
      $bool{$line->[3]},
      $bool{$line->[4]},
      $change,
      $delete,
    );
  }

  print $table->show();
}

#**********************************************************
#
#**********************************************************
sub extfin_report_deeds {

  my ($Y, $M, undef) = split(/-/, $DATE, 3);

  $LIST_PARAMS{USER_TYPE} = $FORM{USER_TYPE};
  $LIST_PARAMS{TOTAL_ONLY} = $FORM{TOTAL_ONLY};
  my $period;

  if ($FORM{show} || $FORM{qindex}) {
    if ($FORM{MONTH}) {
      $LIST_PARAMS{MONTH} = $FORM{MONTH};
    }
    elsif ($FORM{PERIOD} && $FORM{PERIOD} =~ /(\d{2})\.(\d{2})\.(\d{4})-(\d{2})\.(\d{2})\.(\d{4})/) {
      $LIST_PARAMS{FROM_DATE} = "$3-$2";
      $LIST_PARAMS{TO_DATE} = "$6-$5";
    }
    elsif ($FORM{FROM_M}) {
      $LIST_PARAMS{FROM_DATE} = "$FORM{FROM_Y}-" . sprintf("%.2d", $FORM{FROM_M} + 1);
      $LIST_PARAMS{TO_DATE} = "$FORM{TO_Y}-" . sprintf("%.2d", $FORM{TO_M} + 1);
    }

    if ($FORM{xml}) {
      print "Content-Type: text/xml\n\n";
      print "<?xml version=\"1.0\"  encoding=\"windows-1251\" ?>\n";
    }
    elsif ($FORM{qindex}) {
      print "Content-Type: text/html\n\n";
    }
  }
  else {
    $LIST_PARAMS{MONTH} = "$Y-$M";
  }

  my @MONTH_ARR = ('');
  for (my $i = 1; $i < 13; $i++) {
    my $m = sprintf("%02.d", $i);
    push @MONTH_ARR, sprintf("%d-%.2d", $Y, $m);
  }

  if (!$FORM{xml}) {
    my $table = $html->table(
      {
        width    => '100%',
        rowcolor => $_COLORS[0],
        rows     => [
          [
            "$lang{FROM}: ",
            $html->date_fld2('FROM_', { MONTHES => \@MONTHES }),
            "$lang{TO}: ",
            $html->date_fld2('TO_', { MONTHES => \@MONTHES }),
            "$lang{PERIOD}: ",
            $html->form_select(
              'MONTH',
              {
                SELECTED  => $FORM{MONTH},
                SEL_ARRAY => \@MONTH_ARR,
                NO_ID     => 1
              }
            ),
            "$lang{USERS} $lang{TYPE}: "
              . $html->form_select(
              'USER_TYPE',
              {
                SELECTED => $FORM{USER_TYPE},
                SEL_HASH => {
                  '' => $lang{ALL},
                  0  => $lang{USERS},
                  1  => $lang{COMPANIES}
                },
                NO_ID    => 1
              }
            ),
            "$lang{TOTAL}: " . $html->form_input('TOTAL_ONLY', 1,
              { TYPE => 'checkbox', STATE => ($FORM{TOTAL_ONLY}) ? 1 : undef }),

            "XML: ",
            $html->form_input('xml', 1, { TYPE => 'checkbox' }),
            $html->form_input('show', $lang{SHOW}, { TYPE => 'submit' })
          ]
        ],
      }
    );

    print $html->form_main(
      {
        CONTENT => $table->show({ OUTPUT2RETURN => 1 }),
        HIDDEN  => { qindex => "$index" }
      }
    );

  }

  my $list = $Extfin->extfin_report_deeds({ %LIST_PARAMS });

  if ($Extfin->{errno}) {

  }

  my $table = $html->table(
    {
      width   => '100%',
      caption => "PAYMENT_DEED $lang{DATE}: " . ($period || ''),
      border  => 1,
      title   => [ '#', $lang{PERIOD}, 'BILL ID', $lang{NAME}, $lang{TYPE}, $lang{SUM}, $lang{VAT} ],
      ID      => 'EXTFIN_PAYMENT_DEED',
    }
  );

  foreach my $line (@$list) {
    my $date = $line->[1];

    if ($line->[1] =~ /\d{2}(\d{2})\-(\d{2})/) {
      $date = "01.$2.$1";
    }

    my $name = $line->[3];

    if ($FORM{TOTAL_ONLY}) {
      $name = ($line->[4] == 1) ? "$lang{TOTAL}: $lang{COMPANIES}" : "$lang{TOTAL}: $lang{USERS}";
    }

    $table->addrow($line->[0], $date, $line->[2], $name, $line->[4], $line->[5], $line->[6],);
  }

  print $table->show();

}

#**********************************************************
=head2 extfin_report_paids()

=cut
#**********************************************************
sub extfin_report_paids {

  #my %CAPTIONS_HASH = ('1:DATE'            => $lang{DATE},
  #                     '2:USERS'           => $lang{USERS},
  #                     '3:SESSIONS'        => $lang{SESSIONS},
  #                     '4:TRAFFIC_RECV'    => "$lang{TRAFFIC} $lang{RECV}",
  #                     '5:TRAFFIC_SENT'    => "$lang{TRAFFIC} $lang{SENT}",
  #                     '8:TRAFFIC_SUM'     => $lang{TRAFFIC},
  #                     '9:TRAFFIC_2_SUM'   => $lang{TRAFFIC}." 2",
  #                     '6:DURATION'        => $lang{DURATION},
  #                     '7:SUM'             => $lang{SUM});

  my %CAPTIONS_HASH = ();
  my $report_type = $FORM{TYPE} || q{};

  my $list = $Extfin->paid_types_list({ %LIST_PARAMS });
  foreach my $line (@$list) {
    $CAPTIONS_HASH{"$line->[0]:$line->[0]"} = "$line->[1]";
  }

  my %METHODS_HASH = ();
  my $PAYMENT_METHODS = get_payment_methods();
  foreach my $id (keys %$PAYMENT_METHODS) {
    $METHODS_HASH{"$id:$id"} = $PAYMENT_METHODS->{$id};
  }

  require Control::Reports;
  reports(
    {
      DATE        => $FORM{DATE},
      REPORT      => '',
      EX_PARAMS   => {
        DATE  => "$lang{DATE}",
        USERS => "$lang{USERS}"
      },
      PERIOD_FORM => 1,
      EXT_TYPE    => { PAYMENT_METHOD => $lang{PAYMENT_METHOD}, PAYMENT_TYPE => $lang{TYPE}, ADMINS => $lang{ADMINS} },
      FIELDS      => { %CAPTIONS_HASH },
      XML         => 1,
    }
  );

  my ($table_sessions);
  my $output = '';

  my %DATA_HASH = ();
  my %DATA_HASH2 = ();
  my %CHART = ();
  my %AVG = (
    COUNT  => 0,
    SUM    => 0,
    CLOSED => 0
  );

  my $graph_type = '';

  #Day reposrt
  if (defined($FORM{DATE}) || defined($FORM{PAYMENT_METHOD})) {
    if (!defined($FORM{sort})) {
      $LIST_PARAMS{SORT} = 1;
      $LIST_PARAMS{DESC} = 'DESC';
    }

    $LIST_PARAMS{PAYMENT_METHOD} = $FORM{PAYMENT_METHOD} if (defined($FORM{PAYMENT_METHOD}));

    $list = $Extfin->paids_list({ %LIST_PARAMS });
    $table_sessions = $html->table(
      {
        width   => '100%',
        caption => "$lang{FEES}",
        border  => 1,
        title   => [ '#', $lang{DATE}, $lang{USER}, $lang{SUM}, $lang{TYPE}, $lang{DESCRIBE}, "$lang{PAYMENT_METHOD}",
          $lang{ADMIN}, $lang{STATUS}, "$lang{CLOSED} $lang{DATE}", 'EXT ID', '-', '-' ],
        ID      => 'EXTFIN_FEES'
      }
    );

    my ($delete, $change);
    foreach my $line (@$list) {
      if ($permissions{4}{1}) {
        $delete = $html->button($lang{DEL}, "index=$index&del=$line->[0]",
          { MESSAGE => "$lang{DEL} $line->[0]?", BUTTON => 1 });
        $change = $html->button($lang{CHANGE}, "index=$index&chg=$line->[0]&UID=$line->[11]", { BUTTON => 1 });
      }

      $table_sessions->addrow(
        $html->b($line->[0]),
        $html->button($line->[1], "index=$index&chg=$line->[0]"),
        $html->button($line->[2], "index=15&UID=$line->[11]&MODULE=Extfin"),
        $line->[3], $line->[4], $line->[5], $PAYMENT_METHODS->{ $line->[6] },
        $line->[7], ($line->[8]) ? "$lang{CLOSED}" : '',
        $line->[9], $change, $delete
      );
    }

  }
  else {
    my @caption = ($lang{DATE}, $lang{CLOSED}, "$lang{CLOSED} $lang{SUM}", $lang{COUNT}, $lang{SUM});
    if ($report_type) {
      if ($report_type eq 'PAYMENT_METHOD') {
        $caption[0] = $lang{PAYMENT_METHOD};
        push @caption, "$lang{PAYMENTS} $lang{COUNT}", "$lang{PAYMENTS} $lang{SUM}", "$lang{RESULT}";
      }
      elsif ($report_type eq 'PAYMENT_TYPE') {
        $caption[0] = $lang{TYPE};
      }
      elsif ($report_type eq 'USER') {
        $caption[0] = $lang{USERS};
      }
    }

    $table_sessions = $html->table(
      {
        width   => '100%',
        caption => $lang{FEES},
        title   => \@caption,
        qs      => $pages_qs
      }
    );

    $graph_type = 'month_stats';
    my $num = 0;

    $list = $Extfin->paid_reports({ %LIST_PARAMS });
    my %PAIDS_HASH = ();

    foreach my $line (@$list) {
      my $firth_field = $html->button($line->[0], "index=$index&$report_type=$line->[0]$pages_qs");

      if ($report_type) {
        if ($report_type eq 'USER') {
          $firth_field = $html->button($line->[0], "index=15&UID=$line->[5]");
        }
        elsif ($report_type eq 'PAYMENT_METHOD') {
          $firth_field = $html->button($PAYMENT_METHODS->{ $line->[0] },
            "index=$index&PAYMENT_METHOD=$line->[0]$pages_qs");
          $PAIDS_HASH{ $line->[0] } = [ $line->[1], $line->[2], $line->[3], $line->[4] ];
        }
        elsif ($report_type eq 'PAYMENT_TYPE') {
          $firth_field = $html->button($CAPTIONS_HASH{"$line->[0]:$line->[0]"}, "index=$index&PAYMENT_TYPE=$line->[0]");
        }
        elsif ($report_type eq 'ADMINS') {
          $firth_field = $line->[0];
        }

      }

      $AVG{COUNT} = $line->[1] if ($AVG{COUNT} && $AVG{COUNT} < $line->[1]);
      $AVG{SUM} = $line->[3] if ($AVG{SUM} && $AVG{SUM} < $line->[3]);
      $AVG{CLOSED_SUM} = time2sec($line->[5]) if ($AVG{CLOSED_SUM} && $AVG{CLOSED_SUM} < $line->[5]);

      if ($line->[0] =~ /(\d+)-(\d+)-(\d+)/) {
        $num = $3;
      }
      elsif ($line->[0] =~ /(\d+)-(\d+)/) {
        $CHART{X_LINE}[$num] = $line->[0];
        $num++;
      }

      $DATA_HASH{COUNT}[$num] = $line->[1];
      $DATA_HASH2{SUM}[$num] = $line->[3];
      $DATA_HASH2{CLOSED_SUM}[$num] = $line->[5];
      my @rows = ();

      if ($report_type && $report_type ne 'PAYMENT_METHOD') {
        @rows = ($firth_field, $line->[1], $line->[2], $line->[3], $line->[4]);
      }

      $table_sessions->addrow(@rows);
    }

    if ($report_type && $report_type eq 'PAYMENT_METHOD') {
      #Get paymets data
      use Finance;
      my $payments = Finance->payments($db, $admin, \%conf);
      $list = $payments->reports({ %LIST_PARAMS });
      my %PAYMENTS_HASH = ();
      foreach my $line (@$list) {
        push @{ $PAYMENTS_HASH{ $line->[0] } }, $line->[1], $line->[2];
      }

      #Show date
      my $paids_total = 0;
      my $payments_total = 0;
      my $result_total = 0;

      foreach  my $i (keys %$PAYMENT_METHODS) {

        my $paids_sum = ($PAIDS_HASH{$i}->[1]) ? $PAIDS_HASH{$i}->[1] : 0.00;

        my $result_sum = $PAYMENTS_HASH{$i}->[1] - $paids_sum;

        $table_sessions->addrow(
          $html->button($PAYMENT_METHODS->{$i}, "index=$index&PAYMENT_METHOD=$i$pages_qs"),
          @{ ($PAIDS_HASH{$i}->[2]) ? $PAIDS_HASH{$i} : [ '0', '0.00', '0', '0.00' ] },

            ($PAYMENTS_HASH{$i}->[0]) ? $PAYMENTS_HASH{$i}->[0] : 0,
            ($PAYMENTS_HASH{$i}->[1]) ? $PAYMENTS_HASH{$i}->[1] : '0.00',
          sprintf("%.2f", $result_sum),
        );

        $paids_total += $paids_sum;
        $payments_total += $PAYMENTS_HASH{$i}->[1];
        $result_total += $result_sum;
        $Extfin->{TOTAL} += $PAYMENTS_HASH{$i}->[0] + $PAIDS_HASH{$i}->[1];
      }

      my $table3 = $html->table(
        {
          width    => '100%',
          caption  => $lang{RESULT},
          rows     => [ [ "$lang{PAYMENTS}: " . $html->b(sprintf("%.2f", $payments_total)),
            "$lang{FEES}: " . $html->b(sprintf("%.2f", $paids_total)),
            "$lang{RESULT}: " . $html->b(sprintf("%.2f", $result_total)) ] ],
          rowcolor => $_COLORS[2]
        }
      );

      $Extfin->{SUM} = $result_total;
      print $table3->show();

    }

    $output = $html->make_charts(
      {
        PERIOD        => $graph_type,
        DATA          => \%DATA_HASH2,
        AVG           => \%AVG,
        TYPE          => [ 'area', 'area' ],
        TRANSITION    => 1,
        OUTPUT2RETURN => 1
      }
    );

  }

  my $table = $html->table(
    {
      width    => '100%',
      rows     => [ [ "$lang{COUNT}: " . $html->b($Extfin->{TOTAL}), "$lang{SUM}: " . $html->b($Extfin->{SUM}), ] ],
      rowcolor => $_COLORS[2]
    }
  );

  print $table_sessions->show() . $table->show() . $output;

  return 1;
}

#**********************************************************
=head2 extfin_sum()

=cut
#**********************************************************
sub extfin_sum {

  #my %CAPTIONS_HASH = ('1:DATE'            => $lang{DATE},
  #                     '2:USERS'           => $lang{USERS},
  #                     '3:SESSIONS'        => $lang{SESSIONS},
  #                     '4:TRAFFIC_RECV'    => "$lang{TRAFFIC} $lang{RECV}",
  #                     '5:TRAFFIC_SENT'    => "$lang{TRAFFIC} $lang{SENT}",
  #                     '8:TRAFFIC_SUM'     => $lang{TRAFFIC},
  #                     '9:TRAFFIC_2_SUM'   => $lang{TRAFFIC}." 2",
  #                     '6:DURATION'        => $lang{DURATION},
  #                     '7:SUM'             => $lang{SUM});

  my %CAPTIONS_HASH = ();

  my $list = $Extfin->paid_types_list({ %LIST_PARAMS });
  foreach my $line (@$list) {
    $CAPTIONS_HASH{"$line->[0]:$line->[0]"} = "$line->[1]";
  }

  $FORM{TYPE} = 'PAYMENT_METHOD';

  my %METHODS_HASH = ();
  my $PAYMENT_METHODS = get_payment_methods();
  foreach my $id (keys %$PAYMENT_METHODS) {
    $METHODS_HASH{"$id:$id"} = $PAYMENT_METHODS->{$id};
  }

  require Control::Reports;
  reports(
    {
      DATE        => $FORM{DATE},
      REPORT      => '',
      EX_PARAMS   => {
        DATE  => "$lang{DATE}",
        USERS => "$lang{USERS}"
      },
      PERIOD_FORM => 1,
      EXT_TYPE    => {
        PAYMENT_METHOD => $lang{PAYMENT_METHOD},
        PAYMENT_TYPE   => $lang{TYPE},
        ADMINS         => $lang{ADMINS}
      },
      FIELDS      => { %CAPTIONS_HASH },
      XML         => 1,
    }
  );

  my ($table_sessions);
  my $output = '';

  my %DATA_HASH = ();
  my %DATA_HASH2 = ();
  my %CHART = ();
  my %AVG = (
    COUNT  => 0,
    SUM    => 0,
    CLOSED => 0
  );

  my $graph_type = '';

  #Day reposrt
  if (defined($FORM{DATE})) {
    if (!defined($FORM{sort})) {
      $LIST_PARAMS{SORT} = 1;
      $LIST_PARAMS{DESC} = 'DESC';
    }

    $list = $Extfin->paids_list({ %LIST_PARAMS });
    $table_sessions = $html->table(
      {
        width   => '100%',
        caption => "$lang{FEES}",
        border  => 1,
        title   =>
        [ '#', $lang{DATE}, $lang{USER}, $lang{SUM}, $lang{TYPE}, $lang{DESCRIBE}, $lang{ADMIN}, $lang{STATUS},
          "$lang{CLOSED} $lang{DATE}", 'EXT ID', '-', '-' ],
      }
    );

    my ($delete, $change);
    foreach my $line (@$list) {
      if ($permissions{4}{1}) {
        $delete = $html->button($lang{DEL}, "index=$index&del=$line->[0]",
          { MESSAGE => "$lang{DEL} $line->[0]?", BUTTON => 1 });
        $change = $html->button($lang{CHANGE}, "index=$index&chg=$line->[0]&UID=$line->[10]", { BUTTON => 1 });
      }

      $table_sessions->addrow($html->b($line->[0]), $html->button($line->[1], "index=$index&chg=$line->[0]"),
        $html->button($line->[2], "index=15&UID=$line->[10]&MODULE=Extfin"), $line->[3], $line->[4], $line->[5],
          ($line->[6]) ? "$lang{CLOSED}" : '', $line->[7], $line->[8], $line->[9], $change,
        $delete);
    }

  }
  else {
    my @caption = ("$lang{DATE}", "$lang{CLOSED}", "$lang{CLOSED} $lang{SUM}", "$lang{COUNT}", "$lang{SUM}");
    my $type = $FORM{TYPE} || q{};
    if ($type) {
      if ($type eq 'PAYMENT_METHOD') {
        $caption[0] = $lang{PAYMENT_METHOD};
      }
      elsif ($type eq 'PAYMENT_TYPE') {
        $caption[0] = $lang{TYPE};
      }
      elsif ($type eq 'USER') {
        $caption[0] = $lang{USERS};
      }
    }

    $table_sessions = $html->table(
      {
        width   => '100%',
        caption => "$lang{FEES}",
        title   => \@caption,
        qs      => $pages_qs
      }
    );

    $graph_type = 'month_stats';
    my $num = 0;

    $list = $Extfin->paid_reports({ %LIST_PARAMS, TYPE => 'PAYMENT_METHOD' });

    foreach my $line (@$list) {
      my $firth_field = $html->button($line->[0], "index=$index&$type=$line->[0]$pages_qs");
      if ($FORM{TYPE}) {
        if ($FORM{TYPE} eq 'USER') {
          $firth_field = $html->button($line->[0], "index=15&UID=$line->[5]");
        }
        elsif ($FORM{TYPE} eq 'PAYMENT_METHOD') {
          $firth_field = $html->button($PAYMENT_METHODS->{ $line->[0] }, "index=11&UID=$line->[0]");
        }
        elsif ($FORM{TYPE} eq 'PAYMENT_TYPE') {
          $firth_field = $html->button($CAPTIONS_HASH{"$line->[0]:$line->[0]"}, "index=11&UID=$line->[0]");
        }
        elsif ($FORM{TYPE} eq 'ADMINS') {
          $firth_field = $line->[0];
        }
      }

      my @rows = ($firth_field, $line->[1], $line->[2], $line->[3], $line->[4]);

      $AVG{COUNT} = $line->[1] if ($AVG{COUNT} < $line->[1]);
      $AVG{SUM} = $line->[3] if ($AVG{SUM} < $line->[3]);
      $AVG{CLOSED_SUM} = time2sec($line->[5]) if ($AVG{CLOSED_SUM} < $line->[5]);

      if ($line->[0] =~ /(\d+)-(\d+)-(\d+)/) {
        $num = $3;
      }
      elsif ($line->[0] =~ /(\d+)-(\d+)/) {
        $CHART{X_LINE}[$num] = $line->[0];
        $num++;
      }

      $DATA_HASH{COUNT}[$num] = $line->[1];
      $DATA_HASH2{SUM}[$num] = $line->[3];
      $DATA_HASH2{CLOSED_SUM}[$num] = $line->[5];

      $table_sessions->addrow(@rows);
    }

    $output = $html->make_charts(
      {
        PERIOD        => $graph_type,
        DATA          => \%DATA_HASH2,
        AVG           => \%AVG,
        TYPE          => [ 'area', 'area' ],
        TRANSITION    => 1,
        OUTPUT2RETURN => 1
      }
    );
  }

  my $table = $html->table(
    {
      width => '100%',
      rows  => [ [ "$lang{COUNT}: " . $html->b($Extfin->{TOTAL}), "$lang{SUM}: " . $html->b($Extfin->{SUM}), ] ],
    }
  );

  print $table_sessions->show() . $table->show() . $output;

  return 1;
}

#**********************************************************
=head2 extfin_debetors()

=cut
#**********************************************************
sub extfin_debetors {

  if ($FORM{show}) {
    $LIST_PARAMS{DATE} = "$FORM{FROM_DATE}" if ($FORM{show} && $FORM{SEL_DATE});
    $LIST_PARAMS{STATUS} = $FORM{STATUS};
  }
  else {
    $LIST_PARAMS{DATE} = $DATE;
  }

  my $table = $html->table(
    {
      width    => '100%',
      rowcolor => $_COLORS[0],
      rows     => [
        [
          "$lang{PERIOD}: ",
          $html->form_input('SEL_DATE', 1, { TYPE => 'checkbox' }) . $html->date_fld2('FROM_DATE',
            { MONTHES => \@MONTHES }),
          "$lang{STATUS}: "
            . $html->form_select(
            'STATUS',
            {
              SELECTED     => $FORM{STATUS},
              SEL_ARRAY    => [ $lang{ALL}, "$lang{ENABLE}", "$lang{DISABLE}" ],
              ARRAY_NUM_ID => 1
            }
          ),
          "$lang{ROWS}: ".
          $html->form_input('rows', int($conf{list_max_recs}), { SIZE => 4 }),
          $html->form_input('show', $lang{SHOW}, { TYPE => 'submit' })
        ]
      ],
    }
  );

  print $html->form_main({
    CONTENT => $table->show({OUTPUT2RETURN => 1}),
    HIDDEN  => {
      sid   => $sid,
      index => $index,
      UID   => $FORM{UID}
    }
  });

  my $list = $Extfin->extfin_debetors({ %LIST_PARAMS, });

  if ($Extfin->{errno}) {
    $html->message('err', $lang{ERROR}, "[$Extfin->{errno}] $err_strs{$Extfin->{errno}}");
  }

  $table = $html->table({
    width   => '100%',
    caption => "$lang{DEBETORS}",
    border  => 1,
    title   =>
      [
        '#',
        $lang{LOGIN},
        $lang{CONTRACT_ID},
        $lang{FIO},
        $lang{REGISTRATION},
        "$lang{STATUS}",
        "$lang{TARIF_PLAN}",
        $lang{DEPOSIT},
        "< 32 $lang{DAYS}",
        "33 - 64 $lang{DAYS}",
        "65 - 96 $lang{DAYS}",
        "97 - 183 $lang{DAYS}",
        "184 - 365 $lang{DAYS}",
        "> 365 $lang{DAYS}"
      ],
    ID      => 'DEBETORS'
  });

  my $i = 0;
  my $total = 0;
  my $total_sum = 0.00;
  my $total_32 = 0;
  my $total_32_sum = 0.00;
  my $total_65 = 0;
  my $total_65_sum = 0.00;
  my $total_97 = 0;
  my $total_97_sum = 0.00;
  my $total_184 = 0;
  my $total_184_sum = 0.00;
  my $total_365 = 0;
  my $total_365_sum = 0.00;
  my $total_maximum = 0;
  my $total_maximum_sum = 0.00;

  my @interval = ();
  foreach my $line (@$list) {
    @interval = (($line->[9]) ? sprintf("%.2f", $line->[9]) : '', ($line->[10]) ? sprintf("%.2f", $line->[10]) : '',
        ($line->[11]) ? sprintf("%.2f", $line->[11]) : '', ($line->[12]) ? sprintf("%.2f", $line->[12]) : '',
        ($line->[13]) ? sprintf("%.2f", $line->[13]) : '');

    $total_65_sum += $line->[9] || 0;
    $total_97_sum += $line->[10] || 0;
    $total_184_sum += $line->[11] || 0;
    $total_365_sum += $line->[12] || 0;
    $total_maximum_sum += $line->[13] || 0;

    $total_65 += ($line->[9]) ? 1 : 0;
    $total_97 += ($line->[10]) ? 1 : 0;
    $total_184 += ($line->[11]) ? 1 : 0;
    $total_365 += ($line->[12]) ? 1 : 0;
    $total_maximum += ($line->[13]) ? 1 : 0;

    #my $deposit = $Extfin->{DEPOSITS}->{ $line->[14] };
    $table->addrow(
      $i, $html->button($line->[1], "index=15&UID=$line->[14]"),
      $line->[2], $line->[3], $line->[4],
        ($line->[5] == 1) ? $html->color_mark($status[ $line->[5] ], '#FF0000') : $status[ $line->[5] ],
      $line->[6],
        ($line->[7]) ? sprintf("%.2f", $line->[7]) : '',
        ($line->[8]) ? sprintf("%.2f", $line->[8]) : '', @interval,
    );

    $total_sum += $line->[7] if ($line->[7] < 0);
    $total_32_sum += $line->[8];

    $total += ($line->[7] < 0) ? 1 : 0;
    $total_32 += ($line->[8]) ? 1 : 0;

    $i++;
  }

  $table->{rowcolor} = $_COLORS[2];

  @interval = ($html->b($total_65), $html->b($total_97), $html->b($total_184), $html->b($total_365),
    $html->b($total_maximum));

  $table->addrow(
    "$lang{COUNT}:  ", '', '', '', '', '', '',
    $html->b($total),
    $html->b($total_32),
    @interval
  );

  @interval = ($html->b(sprintf("%.2f", $total_65_sum)), $html->b(sprintf("%.2f", $total_97_sum)),
    $html->b(sprintf("%.2f", $total_184_sum)), $html->b(sprintf("%.2f", $total_365_sum)),
    $html->b(sprintf("%.2f", $total_maximum_sum)));

  $table->addrow("$lang{SUM}: ", '', '', '', '', '', '', $html->b(sprintf("%.2f", $total_sum)),
    $html->b(sprintf("%.2f", $total_32_sum)), @interval);

  print $table->show();

  return 1;
}

#**********************************************************
=head2 extfin_payments_fees()

=cut
#**********************************************************
sub extfin_payments_fees {

  if (!$permissions{2} || !$permissions{2}{0}) {
    $html->message('err', $lang{ERROR}, "$lang{ERR_ACCESS_DENY}");
    return 0;
  }

  require Control::Reports;
  reports({
      DATE        => $FORM{DATE},
      REPORT      => '',
      PERIOD_FORM => 1,
      #  	        EXT_TYPE    => { METHOD => $lang{TYPE},
      #  	        	               ADMINS => $lang{ADMINS},
      #  	        	               FIO    => $lang{FIO},
      #  	        	               COMPANIES => "$lang{COMPANIES}"
      #  	        	              }
  });

  $LIST_PARAMS{PAGE_ROWS} = 1000000;

  my $graph_type = 'month_stats';
  my %DATA_HASH = ();
  my %AVG = ();
  my %CHART = ();
  my $num = 1;
  my @CHART_TYPE = ('area', 'line', 'column');
  my $list = $Extfin->report_payments_fees({ %LIST_PARAMS });

  my $table_fees = $html->table({
    width   => '100%',
    caption => "$lang{PAYMENTS} /  $lang{FEES}",
    border  => 1,
    title   => [ '#', $lang{LOGIN}, $lang{FIO}, $lang{PAYMENTS}, $lang{FEES} ],
    qs      => $pages_qs,
    pages   => $Extfin->{TOTAL},
    ID      => 'REPORTS_PAYMENTS_FEES',
    EXPORT  => $lang{EXPORT} . ' XML:&xml=1',
  });

  $pages_qs .= "&subf=2" if (!$FORM{subf});
  foreach my $line (@$list) {
    $table_fees->addrow($num, $html->button($line->[1], "index=15&UID=" . $line->[5]), $line->[2], $line->[3] || '0.00',
      $line->[4] || '0.00',);
    $num++;
  }

  print $table_fees->show();
  my $table = $html->table({
      width    => '100%',
      rows     => [[
        "$lang{TOTAL} $lang{USERS}: " . $html->b($Extfin->{USERS_TOTAL}),
        "$lang{TOTAL} $lang{PAYMENTS}: " . $html->b($Extfin->{PAYMENTS_TOTAL}),
        "$lang{TOTAL} $lang{FEES}: " . $html->b($Extfin->{FEES_SUM}) ] ],
      rowcolor => 'even'
  });

  print $table->show();

  if ($graph_type ne '') {
    print $html->make_charts({
      PERIOD        => $graph_type,
      DATA          => \%DATA_HASH,
      AVG           => \%AVG,
      TYPE          => \@CHART_TYPE,
      TRANSITION    => 1,
      OUTPUT2RETURN => 1,
      %CHART
    });
  }

  return 1;
}

#**********************************************************
=head2 extfin_users_balance()

=cut
#**********************************************************
sub extfin_users_balance {
  my ($Y, $M) = split(/-/, $DATE, 3);

  $LIST_PARAMS{USER_TYPE} = $FORM{USER_TYPE};
  $LIST_PARAMS{TOTAL_ONLY} = $FORM{TOTAL_ONLY};
  my $period = $FORM{PERIOD} || q{};

  if ($FORM{show} || $FORM{qindex}) {
    if ($FORM{MONTH}) {
      $LIST_PARAMS{MONTH} = $FORM{MONTH};
    }
    elsif ($FORM{PERIOD} && $FORM{PERIOD} =~ /(\d{2})\.(\d{2})\.(\d{4})-(\d{2})\.(\d{2})\.(\d{4})/) {
      $LIST_PARAMS{FROM_DATE} = "$3-$2";
      $LIST_PARAMS{TO_DATE} = "$6-$5";
    }
    elsif ($FORM{FROM_M}) {
      $LIST_PARAMS{FROM_DATE} = "$FORM{FROM_Y}-" . sprintf("%.2d", $FORM{FROM_M} + 1);
      $LIST_PARAMS{TO_DATE} = "$FORM{TO_Y}-" . sprintf("%.2d", $FORM{TO_M} + 1);
    }

    if ($FORM{xml}) {
      print "Content-Type: text/xml\n\n";
      print "<?xml version=\"1.0\"  encoding=\"windows-1251\" ?>\n";
    }
    elsif ($FORM{qindex}) {
      print $html->header();
    }
  }
  else {
    $LIST_PARAMS{MONTH} = "$Y-$M";
  }

  my @MONTH_ARR = ('');
  for (my $i = 1; $i < 13; $i++) {
    my $m = sprintf("%02.d", $i);
    push @MONTH_ARR, sprintf("%d-%.2d", $Y, $m);
  }

  if (!$FORM{xml}) {
    my $table = $html->table(
      {
        width    => '100%',
        rowcolor => $_COLORS[0],
        rows     => [
          [
            "$lang{FROM}: ",
            $html->date_fld2('FROM_', { MONTHES => \@MONTHES }),
            "$lang{TO}: ",
            $html->date_fld2('TO_', { MONTHES => \@MONTHES }),
            "$lang{PERIOD}: ",
            $html->form_select(
              'MONTH',
              {
                SELECTED  => $FORM{MONTH},
                SEL_ARRAY => \@MONTH_ARR,
                NO_ID     => 1
              }
            ),
            "$lang{USERS} $lang{TYPE}: "
              . $html->form_select(
              'USER_TYPE',
              {
                SELECTED => $FORM{USER_TYPE},
                SEL_HASH => {
                  '' => $lang{ALL},
                  0  => $lang{USERS},
                  1  => $lang{COMPANIES}
                },
                NO_ID    => 1
              }
            ),
            "$lang{TOTAL}: " . $html->form_input('TOTAL_ONLY', 1,
              { TYPE => 'checkbox', STATE => ($FORM{TOTAL_ONLY}) ? 1 : undef }),

            "XML: ",
            $html->form_input('xml', 1, { TYPE => 'checkbox' }),
            $html->form_input('show', $lang{SHOW}, { TYPE => 'submit' })
          ]
        ],
      }
    );

    print $html->form_main({
      CONTENT => $table->show({ OUTPUT2RETURN => 1 }),
      HIDDEN  => { qindex => "$index" }
    });
  }

  my $list = $Extfin->extfin_report_balances({ %LIST_PARAMS });
  _error_show($Extfin);

  my $table = $html->table({
    width   => '100%',
    caption => "$lang{DEPOSIT} $lang{DATE}: " . ($period || ''),
    border  => 1,
    title   => [ '#', $lang{LOGIN}, "$lang{FIO}/$lang{NAME}", "DEBIT", $lang{CREDIT}, $lang{SALDO} ],
    ID      => 'EXTFIN_PAYMENT_DEED',
  });

  my $num = 1;
  $Extfin->{TOTAL_SALDO} = 0;
  foreach my $line (@$list) {
    my $date = $line->[1];

    if ($line->[1] =~ /\d{2}(\d{2})\-(\d{2})/) {
      $date = "01.$2.$1";
    }

    my $name = $line->[3];

    if ($FORM{TOTAL_ONLY}) {
      $name = ($line->[4] == 1) ? "$lang{TOTAL}: $lang{COMPANIES}" : "$lang{TOTAL}: $lang{USERS}";
    }

    my $fees = sprintf("%.6f", $line->[4] || 0);
    my $saldo = sprintf("%.6f", ($line->[3] - $fees));
    $table->addrow($num, $html->button($line->[1], "index=11&UID=$line->[6]"), $line->[2], $line->[3], $fees, $saldo,);

    $Extfin->{TOTAL_SALDO} += $saldo;
    $num++;
  }

  $table->{rowcolor} = $_COLORS[3];
  $table->addrow('-', '', '', $Extfin->{TOTAL_DEBIT}, $Extfin->{TOTAL_CREDIT}, $Extfin->{TOTAL_SALDO});

  print $table->show();

  return 1;
}


#**********************************************************
=head2 company_reports()

=cut
#**********************************************************
sub company_reports {

  return 1;
}


#**********************************************************
=head2 extfin_monthly_summary () -

  Arguments:
    ATTRIBUTES -
  Returns:

  Examples:

=cut
#**********************************************************
sub extfin_monthly_summary {
  my ($attr) = @_;

  my $debug = $attr->{DEBUG} || 0;
  my $debug_output = "Extfin summary\n";

  $ADMIN_REPORT{DATE} = $DATE if (!$ADMIN_REPORT{DATE});
  my ($y, $m, $d) = split(/-/, $ADMIN_REPORT{DATE}, 3);

  $conf{START_PERIOD_DAY} = 1 if (!$conf{START_PERIOD_DAY});
  $Extfin->{debug} = 1 if ($debug > 6);

  if ($d != $conf{START_PERIOD_DAY}) {
    $DEBUG .= $debug_output;
    return $debug_output;
  }

  if ($m == 1) {
    $m = 12;
    $y--;
  }
  else {
    $m--;
  }

  my $period = sprintf("%d-%.2d", $y, $m);
  $debug_output .= "Extfin make summary. Period: $period\n" if ($debug > 1);
  $Extfin->payment_deed({ MONTH => "$period" });

  foreach my $id (keys %{ $Extfin->{PAYMENT_DEED} }) {
    my (undef, undef, $vat) = split(/\|/, $Extfin->{NAMES}{$id});
    $vat = 0 if (!$vat);

    $debug_output .= "PERIOD: $period BILL_ID: $id SUM: $Extfin->{PAYMENT_DEED}{$id} DATE: $DATE\n" if ($debug > 2);
    if ($debug < 5) {
      $Extfin->summary_add(
        {
          PERIOD  => $period,
          BILL_ID => $id,
          SUM     => $Extfin->{PAYMENT_DEED}{$id},
          DATE    => "$DATE",
          AID     => $admin->{AID}
        }
      );
    }
  }

  ($y, $m, $d) = split(/-/, $ADMIN_REPORT{DATE}, 3);
  $period = sprintf("%d-%.2d", $y, $m);

  $Extfin->balances_add({ PERIOD => "$period" });

  $DEBUG .= $debug_output;
  return $debug_output;
}

#**********************************************************
=head2 extfin_calculated_balance () -

  Arguments:

  Returns:

  Examples:

=cut
#**********************************************************
sub extfin_calculated_balance {

  use Finance;
  use Bills;
  use Users;

  if ($FORM{DEBUG}) {
    $Extfin->{debug}=1;
  }

  my @YEARS = ('2017', '2018', '2019', '2020', '2021', '2022', '2023');

  my ($year, $month, undef) = split('-', $DATE);

  $month = $FORM{MONTH} if ($FORM{MONTH} && $FORM{MONTH} =~ /^\d+$/);
  $year = $FORM{YEAR} if ($FORM{YEAR});
  $FORM{sort} //= 1;
  $FORM{desc} //= '';
  my $group_id = $FORM{GID} || '';

  my $qs = "&MONTH=$month&YEAR=$year&GID=$group_id";

  $Extfin->{MONTH_SELECT} = $html->form_select(
    'MONTH',
    {
      SELECTED     => $month,
      SEL_ARRAY    => [ '', @MONTHES ],
      ARRAY_NUM_ID => 1,
    }
  );

  $Extfin->{YEAR_SELECT} = $html->form_select(
    'YEAR',
    {
      SELECTED  => $FORM{YEAR} || $year,
      SEL_ARRAY => [ '', @YEARS ],
    }
  );

  my $period = sprintf("%s-%#.2d", $year, $month);

  my $total_old_saldo = 0.00;
  my $total_fees = 0.00;
  my $total_payments = 0.00;
  my $total_new_saldo = 0.00;

  my $users_print_table = '';

  my $users_saldo = $Extfin->extfin_report_balance_list({
    PERIOD    => $period,
    GID       => $FORM{GID} || '',
    COLS_NAME => 1,
    PG        => $FORM{pg},
    PAGE_ROWS => $FORM{PAGE_ROWS},
  });
  
  if ($qs && !$qs =~ /PAGE_ROWS=/) {
    $qs .= "&PAGE_ROWS=10000";
  }

  my $table = $html->table({
    width   => '100%',
    caption => "$lang{SALDO} $lang{FOR_} " . ($MONTHES[ int($month - 1) ] . " $year"),
    border  => 1,
    title   => [ $lang{FIO}, $lang{CONTRACT}, "$lang{SALDO_BEGIN_PERIOD}", "$lang{FEES}", "$lang{PAYMENTS}",
      "$lang{SALDO_END_PERIOD}" ],
    ID      => 'EXTFIN_CALCULATED_BALANCE',
    EXPORT  => 1,
    pages   => 10000,
    qs      => $qs,
    MENU    => "$lang{PRINT}:qindex=$index&header=2&print_form=1&sort=$FORM{sort}&desc=$FORM{desc}$qs:print"
  });

  foreach my $user_saldo (@$users_saldo) {
    my $saldo_for_start = sprintf('%.2f', ($user_saldo->{sum} || 0.00));
    my $payment_sum = $user_saldo->{payments_sum} || 0;
    my $fees_sum = $user_saldo->{fees_sum} || 0;
    my $saldo = $saldo_for_start - $fees_sum + $payment_sum;
    my $user_button = $html->button(($user_saldo->{fio} || "-----"), "index=15&UID=$user_saldo->{uid}", {});

    $table->addrow($user_button,
      ($user_saldo->{contract_id} || ''),
        ($saldo_for_start < 0) ? $html->b($saldo_for_start) : $saldo_for_start,
      sprintf('%.2f', $fees_sum),
      sprintf('%.2f', $payment_sum),
      sprintf('%.2f', $saldo));

    $users_print_table .=
      "<tr><td>"
        . ($user_saldo->{fio} || '---------')
        . "</td><td align='right'>"
        . ($user_saldo->{contract_id} || '')
        . "</td><td align='right'>"
        . ($saldo_for_start < 0 ? $html->b($saldo_for_start) : $saldo_for_start)
        . "</td><td align='right'>"
        . sprintf('%.2f', $fees_sum)
        . "</td><td align='right'>"
        . sprintf('%.2f', $payment_sum)
        . "</td><td align='right'>"
        . sprintf('%.2f', $saldo)
        . "</td></tr>";

    # total count
    $total_old_saldo += $saldo_for_start;
    $total_fees += $fees_sum;
    $total_payments += $payment_sum;
    $total_new_saldo += $saldo;
  }

  $table->addrow('-', '-', '-', '-', '-');
  $table->addrow("$lang{TOTAL}", '', sprintf('%.2f', $total_old_saldo), sprintf('%.2f', $total_fees),
    sprintf('%.2f', $total_payments), sprintf('%.2f', $total_new_saldo));

  $users_print_table .=
    "<tr><td>$lang{TOTAL}</td><td></td><td align='right'>"
      . sprintf('%.2f', $total_old_saldo)
      . "</td><td align='right'>"
      . sprintf('%.2f', $total_fees)
      . "</td><td align='right'>"
      . sprintf('%.2f', $total_payments)
      . "</td><td align='right'>"
      . sprintf('%.2f', $total_new_saldo)
      . "</td></tr>";

  my $print_table = qq{
      <table width="100%" cellspacing="0" border="1">
    <thead>
      <tr>
        <td align='center'>$lang{FIO}</td>
        <td align='center'>$lang{CONTRACT}</td>
        <td align='center'>$lang{SALDO_BEGIN_PERIOD}</td>
        <td align='center'>$lang{FEES}</td>
        <td align='center'>$lang{PAYMENTS}</td>
        <td align='center'>$lang{SALDO_END_PERIOD}</td>
      </tr>
    <thead>
    <tbody>
    $users_print_table
    </tbody>
    </table>
    };

  if ($FORM{print_form}) {
    $html->tpl_show(
      _include('extfin_balance_reports_print', 'Extfin'),
      {
        TABLE  => $print_table,
        PERIOD => ($MONTHES[ int($month - 1) ] . " $year"),
      }
    );

    return 1;
  }

  $Extfin->{GROUPS_SELECT} = sel_groups({});

  $html->tpl_show(_include('extfin_balance_reports', 'Extfin'), $Extfin);

  print $table->show();

  return 1;
}

=head extfin_quick_info($attr) - Quick information

  Arguments:
    $attr
      UID

  Return:

=cut
#**********************************************************
sub extfin_quick_info {
  my ($attr) = @_;
  my $result;

  my $uid = $attr->{UID} || $FORM{UID};

  if ($attr->{UID}) {
    my $list = $Extfin->paid_periodic_list({
      UID        =>  $uid,
      COLS_NAME  => 1,
      COLS_UPPER => 1
    });

    $result = $list->[0];
    my $service_status = sel_status({ HASH_RESULT => 1 });
    $result->{STATUS} = (defined($result->{STATUS})) ? $service_status->{ $result->{STATUS} } : '';
    ($result->{STATUS}, undef)=split(/:/, $result->{STATUS});
    return $result;
  }
  elsif($attr->{GET_PARAMS}) {
    $result = {
      HEADER    => $lang{ACCRUALS},
      FIELDS => {
        UID         => 'UID',
      }
    };

    return $result;
  }

  $Extfin->paid_periodic_list({
    UID        => $uid,
    TOTAL_SERVICES => '_SHOW',
    COLS_NAME  => 1,
    COLS_UPPER => 1
  });

  return ($Extfin->{TOTAL_SERVICES} && $Extfin->{TOTAL_SERVICES} > 0) ? $Extfin->{TOTAL_SERVICES} : '';
}

#**********************************************************
=head2 internet_service_activate($attr)

  Arguments:
    $attr
      TP_INFO
      USER_INFO
        UID
        ID
      DEBUG

=cut
#**********************************************************
sub extfin_service_activate {
  my ($attr)=@_;

  my $debug_output = q{};
  my $user_info = $attr->{USER_INFO};
  my $debug = $attr->{DEBUG} || 0;
  my $date = $attr->{DATE} || $DATE;
  my (undef, undef, $d)=split(/\-/, $date);

  if ($d == 1) {
    return 1;
  }

  my $user_tariff_list = $Extfin->paid_periodic_list({
    %LIST_PARAMS,
    UID       => $user_info->{UID},
    #DISABLE   => 3,
    DELETED   => 0,
    COLS_NAME => 1
  });

  foreach my $user ( @$user_tariff_list ) {
    if (! $user->{date}) {
      next;
    }

    my $days_in_month = days_in_month({ DATE => $date });
    my $sum = sprintf("%.2f", $user->{sum} / $days_in_month * ($days_in_month - $d + 1));

    my $diff = date_diff($date, $user->{expire});
    print "if ($date ne '0000-00-00' && date_diff($date, $user->{expire}) <= 0) DIF: $diff\n";
    if ($user->{expire} ne '0000-00-00' && date_diff($date, $user->{expire}) <= 0) {
      print "next\n";
      next;
    }

    if ($sum > 0) {
      require Payments;
      my $Payments = Payments->new($db, $admin, \%conf);
      $Payments->add({
          BILL_ID  => $user_info->{BILL_ID},
          UID      => $user_info->{UID}
        },
        {
          SUM      => $sum,
          METHOD   => $user->{pt_id},
          DESCRIBE => ($user->{comments} ne '') ? $user->{comments} : "$lang{PERIOD}: $sum",
          INNER_DESCRIBE => $attr->{INNER_DESCRIBE}
        }
      );
    }
  }

  return 1;
}

#**********************************************************
=head2 internet_service_deactivate($attr)

  Arguments:
    $attr
      TP_INFO
      USER_INFO
      DEBUG
      STATUS - Disable status

=cut
#**********************************************************
sub extfin_service_deactivate {
  my ($attr)=@_;

  my $debug_output = q{};
  my $user_info = $attr->{USER_INFO};
  my $debug = $attr->{DEBUG} || 0;
  my $date = $attr->{DATE} || $DATE;
  my (undef, undef, $d)=split(/\-/, $date);
  my $user_tariff_list = $Extfin->paid_periodic_list({
    %LIST_PARAMS,
    UID => $user_info->{UID},
    COLS_NAME => 1
  });

  foreach my $user ( @$user_tariff_list ) {
    if (! $user->{date}) {
      next;
    }

    my $days_in_month = days_in_month({ DATE => $date });
    my $days = $days_in_month - $d + 1;
    my $next_abon = next_month({ DATE => $date });

    my $sum = $user->{sum} / $days_in_month * $days;
    if($debug > 0) {
      print "$user->{sum} DATE: $user->{date} NEXT: $next_abon ID: $user->{id} | $sum\n";
    }

    if ($sum > 0) {
      require Fees;
      my $Fees = Fees->new($db, $admin, \%conf);
      $Fees->take({
        BILL_ID  => $user_info->{BILL_ID},
        UID      => $user_info->{UID}
      },
        $sum,
        {
          SUM      => $sum,
          METHOD   => 6,
          DESCRIBE => "$lang{COMPENSATION}. $lang{DAYS}:" .
            "$date/$next_abon ($days)" . (($attr->{DESCRIBE}) ? ". $attr->{DESCRIBE}" : ''),
          INNER_DESCRIBE => $attr->{INNER_DESCRIBE}
        }
      );
    }
  }

  return $debug_output;
}



1;

