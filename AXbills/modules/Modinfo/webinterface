#!perl

=head2
  
  Show module information

=cut 

use strict;
use warnings;

our ($db, %lang);
our AXbills::HTML $html;

use Modinfo::db::Modinfo;
my $Modinfo = Modinfo->new($db, undef, undef);


#**********************************************************
=head modinfo_start_page_show($attr)

=cut
#**********************************************************
sub modinfo_start_page_show {
  #my ($attr) = @_;
  require AXbills::Fetcher;
  AXbills::Fetcher->import(qw(web_request));

  my $output = web_request('http://axbills.net.ua/info.txt', { BODY_ONLY => 1 });
  my @modules_list = ();

  if ($output) {
    @modules_list = split(/[\r]?\n/, $output);
  }
  else {
    return 0;
  }

  my ($name, undef, $url) = split(/:/, $modules_list[rand($#modules_list + 1)], 3);

  my $info = modinfo_show($name, $url);
  
  print $info if ($index);
  
  return $info;
}


#**********************************************************
=head2 modinfo_show($module_name, $url) - info about module

  Arguments:
    $module_name
    $url

  Results:
    $result

=cut
#**********************************************************
sub modinfo_show {
  my ($module_name, $url) = @_;
  my $desc_info = $url;
  unless ($url) {
    $url = 'http://axbills.net.ua:8090/display/AB/'. lc($module_name);
    $desc_info = 'http://axbills.net.ua/wiki/doku.php?id=axbills:docs:modules:'. lc($module_name) .':ru';
  }

  #Get module info

  my $body = web_request($desc_info. '&do=export_raw', { BODY_ONLY => 1 });
  if (!$body) {
    return '';
  }
  
  my (undef, $describe, $futures) = split(/====.+====\n/, $body);
  $describe =~ s/\\\\/<br>/g;
  
  $describe =~ s/\[\[#.*\|//g;
  $describe =~ s/\{.*\}//g;
  $futures  =~ s/\[\[#.*\|//g;
  $futures  =~ s/\]\]//g;
  $futures  =~ s/\*/<br>\*/g;
  $futures  =~ s/\\\\/<br>/g;
  
  $futures  =~ s/==(.+)==/<b>$1<\/b>/g;
  $futures  =~ s/[[.+|(.+)]]/$1/g;
  
  my $result =
    "<div class='card card-primary card-outline'>
      <div class='card-header'>
        <h4 class='card-title table-caption'>$lang{MODULE} <b>$module_name</b></h4>
        <div class='card-tools'>
          <button type='button' title='Show/Hide' class='btn btn-tool' data-card-widget='collapse'>
            <i class='fa fa-minus'></i>
          </button>
        </div>
      </div>

      <div class='card-body' style='overflow: auto; text-align: justify;'>
        <p>$describe</p>
        <p>$futures</p>
        <p>". $html->button($lang{GUIDE_WIKI_LINK}, "$url", { class => 'btn btn-primary', ex_params => 'target=_new', GLOBAL_URL => $url  }) ."</p>
      </div>
    </div>";

  return $result;
}


#**********************************************************
=head2 modinfo_tips() - Get random tip from db

  Arguments:

  Results:
    $card_info

=cut
#**********************************************************
sub modinfo_tips {
  my $tip = $Modinfo->rand_tip();
  my $card_info =
    "<div class='card card-primary card-outline'>
      <div class='card-header'>
        <h4 class='card-title table-caption'>"
          .$lang{TIPS}.
       "</h4>
        <div class='card-tools'>
          <button type='button' title='Show/Hide' class='btn btn-tool' data-card-widget='collapse'>
            <i class='fa fa-minus'></i>
          </button>
        </div>
      </div>
      <div class='card-body' style='overflow: auto; text-align: justify;'>
        $tip
      </div>
    </div>";

  return $card_info;
}


#**********************************************************
=head2 modinfo_start_page() - returns module dashboard

  Arguments:

  Results:
    \%START_PAGE_F

=cut
#**********************************************************
sub modinfo_start_page {
  my %START_PAGE_F = (
      'modinfo_start_page_show' => $lang{MOD_INFO},
      'modinfo_tips'            => $lang{TIPS}
  );

  return \%START_PAGE_F;
}

1;
